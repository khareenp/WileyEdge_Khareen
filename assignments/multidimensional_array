// Khareen Francis-Proverbs
package assignments

import (
  "fmt"
)

func Run() {
  // take user input and create a 2d slice
	var row, col int
	fmt.Print("Please enter the number of rows: ")
	fmt.Scan(&row)
	fmt.Print("Please enter the number of columns: ")
	fmt.Scan(&col)


  //declare empty 2d slice to pupulate with user input
	var matrix [][]int

  //make len of rows "user input"
	matrix = make([][]int, row)
	for i := 0; i < row; i++ {
    //make len of cols "user input"
		matrix[i] = make([]int, col)
	}

	// take user input and assign values to the 2-d slice
	for i := 0; i < row; i++ {
		for j := 0; j < col; j++ {
			fmt.Printf("Enter the value for row %d column %d: ", i, j)
			fmt.Scan(&matrix[i][j])
		}
	}


	// print the 2d slice
	fmt.Println("The matrix is:")
	for i := 0; i < row; i++ {
		for j := 0; j < col; j++ {
			fmt.Printf("%d", matrix[i][j])
		}
		fmt.Println()
	}

	// create a 3x3 
	new_matrix := [][]int{
		{1, 2, 3},
		{4, 5, 6},
		{7, 8, 9},
	}

	

	// print the top left triangle of new_matrix
	for i := 0; i < 3; i++ {
		for j := 0; j <= i; j++ {
			fmt.Printf("%d ", new_matrix[i][j])
		}
		fmt.Println()
	}

	// print reverse triangle of new_matrix
	for i := 0; i < 3; i++ {
		for j := 0; j < 3-i; j++ {
			fmt.Printf("%d ", new_matrix[i][j])
		}
		fmt.Println()
	}



//  make new slice with reversed columns of the 3x3 slice
 reverseColumns := make([][]int, 3)
 for i := 0; i < 3; i++ {
	 reverseColumns[i] = make([]int, 3)
 }
 for i := 0; i < 3; i++ {
	 for j := 0; j < 3; j++ {
		 reverseColumns[i][j] = new_matrix[i][2-j]
	 }
	 fmt.Println(reverseColumns[i])
 }


	// make a new slice with rows in reverse order of the 3x3 slice
	reverseRows := make([][]int, 3)
	for i := 0; i < 3; i++ {
		reverseRows[i] = make([]int, 3)
	}
	for i := 0; i < 3; i++ {
        for j:=0; j<3;j++{
            reverseRows[i] = new_matrix[2-i]
        }
        		fmt.Println(reverseRows[i])	
	}

        

}

 